name: Release
on:
  create:
jobs:
  test:
    name: Test1
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'branch' || startsWith(github.ref_name, 'release/' )  }}
    steps:
      - name: Test
        run: echo test

      - name: Get version to be released
        id: get-version
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          APP_VERSION_TEXT=${BRANCH_NAME##*/}
          APP_VERSION="$(echo "${APP_VERSION_TEXT}"| grep -o -E "([0-9]+\.){1}[0-9]+(\.[0-9]+)?")"
          echo "app_version_text=${APP_VERSION_TEXT}" >>"${GITHUB_OUTPUT}"
          echo "app_version=${APP_VERSION}" >>"${GITHUB_OUTPUT}"



          
          echo "detected version: ${APP_VERSION}"


      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          # required
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"

      - name: Configration for git
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      - name: Checkout
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ env.GH_TOKEN }}

      - name: update package.json
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          echo "Try to update package.json"
          echo "-- before"
          cat package.json|grep version
          sed -i -e 's/\("version": "\).*\("\)/\1${{ steps.get-version.outputs.app_version }}\2/' package.json
          echo "-- after"
          cat package.json|grep version
          git add -N .
          if git diff --exit-code --quiet; then
            echo "No changes detected."
          else
            echo "Changes detected."
            git add .
            git commit -m "chore: update version of package.json" -m "[skip ci]"
            git push
          fi
          